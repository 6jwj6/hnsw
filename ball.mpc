
# hello_world.mpc
from Compiler.library import *
from Compiler.compilerLib import Compiler
from Compiler.types import *
from Compiler.oram import *
from Programs.Source.HeapQ import MinHeapQ,MaxHeapQ
import time
from Compiler.mpc_math import *
# compiler = Compiler()

# @compiler.register_function('helloworld')
# def hello_world():
#     print_ln('hello world')

# if __name__ == "__main__":
#     compiler.compile_func()
# print_ln('-'*50+'RESULT'+'-'*50)
# a = sint.Array(100000)
# a.input_from(0)

# a.sort()
# a_revealed = a.reveal_to(0)
# print_ln_to(0,'output is : %s',1)


# x = sint(10)
# @for_range(10000)
# def _(i):
#     x.update(i)
# print_ln_to(0, 'x = %s', x.reveal_to(0))

# @function
# def f(x, y, z):
#     y.write(1)
#     z[0] = 2
#     return x + 3

# a = MemValue(sint(0))
# b = sint.Array(10)
# c = f(sint(4), a, b)
# a.write(10)
# @for_range(a.reveal())
# def _(i):
#     b[i] = i
# print_ln('a = %s b[0] = %s c = %s', a.reveal(), b[0].reveal(), c.reveal())
# print_ln('-'*106)
# y = sint.get_input_from(2).reveal()
# print_ln('%s', y)
# @for_range(y)
# def _(i):
#     print_ln('%s', i)
# x = sint.Tensor([100,2])
# x.input_from(1)
# a = OptimalORAM(size = 100, value_length = 2)
# ve = x.get_vector()
# print_ln('%s', len(ve))
# a.access()
# print_ln('%s', type(a))

# MMAX0 = 12
# EP = sint.get_input_from(2).reveal()
# L = sint.get_input_from(2).reveal()
# NodeCnt = sint.get_input_from(2).reveal()
# print_ln("完成读取 EP, L, NodeCnt ...")

# print_ln("开始读取 edge ...")
# tmp = sint.Array(4)
# edge = OptimalORAM(size = 100, value_length = 4)
# @for_range_opt(100)
# def _(i):
#     tmp.input_from(2)
#     edge[i] = [*(tmp.get_vector())]
#     print_ln('%s',[edge[i][_].reveal() for _ in range(4)])
# print_ln("完成读取 edge ...")

# W = [MemValue(1)]
# L = cint(1)
# @for_range_opt(L,0,-1)
# def _(i):
#     # nonlocal W
#     # W = [W[0] + 1]
#     W[0].write(W[0]+2)
#     print_ln('%s', W[0])
#     print_ln('%s', i)

C = sint.Tensor([10, 2])
@for_range_opt(10)
def _(i):
    C[i] = (10-i,i)
C.sort()
print_ln('%s',C[0][1].reveal())